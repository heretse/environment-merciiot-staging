[{"id":"456886de.887358","type":"tab","label":"Packet Filter Flow","disabled":false,"info":""},{"id":"33922864.659508","type":"subflow","name":"Customized Subflow","info":"","in":[{"x":95,"y":125,"wires":[]}],"out":[{"x":602,"y":123,"wires":[{"id":"33922864.659508","port":0}]}]},{"id":"c6ab6c63.a37b2","type":"mqtt-broker","z":"","name":"","broker":"mqtt-svc","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"824aef01.52bdb","type":"redis-config","z":"","host":"redis-svr","port":"6379","dbase":"0","pass":"gemtek123"},{"id":"c1a37449.fa5548","type":"mongodb","z":"","hostname":"mongodb","port":"27017","db":"argi_dev","name":""},{"id":"f4f5a6d8.8dccb8","type":"mqtt-broker","z":"","name":"acer_dev","broker":"10.5.161.181","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"daf7561b.5588e8","type":"mqtt in","z":"456886de.887358","name":"","topic":"GIOT-GW/UL/+","qos":"2","broker":"c6ab6c63.a37b2","x":89,"y":404,"wires":[["d2a9727a.44507"]]},{"id":"7b8193d2.c9531c","type":"redis-command","z":"456886de.887358","server":"824aef01.52bdb","command":"get","name":"","topic":"","x":99,"y":74,"wires":[["d6cfb822.ec0e48","b7876fb7.19522"]]},{"id":"64a9d12c.e1e5","type":"function","z":"456886de.887358","name":"set obj to flow","func":"let packetObj = {}\nif(Array.isArray(msg.payload)){\n  packetObj = msg.payload[0]\n}\nelse{\n  packetObj = msg.payload\n}\nif(packetObj.extra !== undefined){\n  if(packetObj.extra.fcnt !== undefined)\n    packetObj['frameCnt'] = packetObj.extra.fcnt\n  if(packetObj.extra.fport !== undefined)\n    packetObj['fport'] = packetObj.extra.fport\n}\nmsg.payload = packetObj\n// flow.set('packet', packetObj)\nmsg['packet'] = packetObj\nnode.warn('receive time:' + Date.now())\nreturn msg","outputs":1,"noerr":0,"x":94,"y":313,"wires":[["70d198a5.003648","3e00636b.eef91c"]]},{"id":"70d198a5.003648","type":"switch","z":"456886de.887358","name":"check macAddr","property":"payload.macAddr","propertyType":"msg","rules":[{"t":"nnull"},{"t":"null"}],"checkall":"true","repair":false,"outputs":2,"x":96,"y":275,"wires":[["24a635b6.4bcc0a"],["5178fca.825ea04"]]},{"id":"24a635b6.4bcc0a","type":"switch","z":"456886de.887358","name":"check frameCnt","property":"payload.frameCnt","propertyType":"msg","rules":[{"t":"nnull"},{"t":"null"}],"checkall":"true","repair":false,"outputs":2,"x":90,"y":238,"wires":[["45fb60.0cc0f4a"],["5178fca.825ea04"]]},{"id":"45fb60.0cc0f4a","type":"switch","z":"456886de.887358","name":"check data","property":"payload.data","propertyType":"msg","rules":[{"t":"nnull"},{"t":"null"}],"checkall":"true","repair":false,"outputs":2,"x":87,"y":198,"wires":[["3f3bdf9f.8edfe"],["5178fca.825ea04"]]},{"id":"5178fca.825ea04","type":"function","z":"456886de.887358","name":"set missing info","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'missing data'\nnewPayload['responseCode'] = '404'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":447,"y":406,"wires":[["907f2cb8.7e782"]]},{"id":"907f2cb8.7e782","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":985,"y":465,"wires":[]},{"id":"3f3bdf9f.8edfe","type":"function","z":"456886de.887358","name":"set macAddr to key","func":"let newPayload = []\nlet dlFlg = false\nif(msg.payload.data.startsWith('99'))\n  dlFlg = true\nmsg['dlFlg'] = dlFlg\nnewPayload.push(msg.payload.macAddr)\nmsg.payload = newPayload\nreturn msg;","outputs":1,"noerr":0,"x":100,"y":158,"wires":[["4d20ca51.99b664"]]},{"id":"d6cfb822.ec0e48","type":"switch","z":"456886de.887358","name":"check cache","property":"payload","propertyType":"msg","rules":[{"t":"nnull"},{"t":"null"}],"checkall":"true","repair":false,"outputs":2,"x":309,"y":74,"wires":[["9e7c50f8.42a68"],["853e3949.3771c8"]]},{"id":"9e7c50f8.42a68","type":"function","z":"456886de.887358","name":"check frameCnt val","func":"let obj = msg['packet']\nlet newPayload = []\nlet fc = false\nif(obj.frameCnt == msg.payload){\n  fc = true  \n}\nelse{\n  newPayload.push(obj.macAddr)\n  newPayload.push(obj.frameCnt)\n  msg.payload = newPayload\n}\nmsg['fc'] = fc\nreturn msg","outputs":1,"noerr":0,"x":547,"y":55,"wires":[["3fef311d.a187be"]]},{"id":"3fef311d.a187be","type":"switch","z":"456886de.887358","name":"","property":"fc","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":733,"y":55,"wires":[["a49ba54d.21c718"],["714dde99.6d64f"]]},{"id":"a49ba54d.21c718","type":"function","z":"456886de.887358","name":"set duplicate frameCnt","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'duplicate frameCnt'\nnewPayload['responseCode'] = '404'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":918,"y":27,"wires":[["f63e59fe.c06d58"]]},{"id":"f63e59fe.c06d58","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1129,"y":24,"wires":[]},{"id":"714dde99.6d64f","type":"redis-command","z":"456886de.887358","server":"824aef01.52bdb","command":"set","name":"","topic":"","x":846,"y":89,"wires":[["d2095642.77e538"]]},{"id":"853e3949.3771c8","type":"function","z":"456886de.887358","name":"set cache","func":"let newPayload = []\n// let obj = flow.get('packet')\nlet obj = msg['packet']\nnewPayload.push(obj.macAddr)\nnewPayload.push(obj.frameCnt)\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":535,"y":100.9999771118164,"wires":[["714dde99.6d64f"]]},{"id":"d2095642.77e538","type":"switch","z":"456886de.887358","name":"check result","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"OK","vt":"str"},{"t":"neq","v":"OK","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":664,"y":166,"wires":[["33b3c4b4.0628ac"],["c317d79d.c86e38"]]},{"id":"c317d79d.c86e38","type":"function","z":"456886de.887358","name":"set cache fail","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'insert redis fail'\nnewPayload['responseCode'] = '403'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":873,"y":236,"wires":[["66acb28f.e9bfac"]]},{"id":"d31c27d5.a537d8","type":"mongodb in","z":"456886de.887358","mongodb":"c1a37449.fa5548","name":"get parsing rule","collection":"maps","operation":"find","x":1330,"y":154.99998474121094,"wires":[["fb4b69e7.407548"]]},{"id":"31dbee26.be9252","type":"function","z":"456886de.887358","name":"find parsing rule by deviceType","func":"// let obj = flow.get('packet')\nlet obj = msg['packet']\nlet newPayload = {}\nnewPayload['deviceType'] = obj.fport+''\nmsg.payload = newPayload\nmsg['fportFlg'] = true\nreturn msg","outputs":1,"noerr":0,"x":1100,"y":200.99998474121094,"wires":[["d31c27d5.a537d8","66acb28f.e9bfac"]]},{"id":"a9d299a8.b61218","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1722,"y":252,"wires":[]},{"id":"d2a9727a.44507","type":"json","z":"456886de.887358","name":"","property":"payload","action":"obj","pretty":false,"x":82,"y":354,"wires":[["64a9d12c.e1e5"]]},{"id":"66acb28f.e9bfac","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1302,"y":241,"wires":[]},{"id":"fb4b69e7.407548","type":"switch","z":"456886de.887358","name":"check maps","property":"payload.length","propertyType":"msg","rules":[{"t":"gte","v":"1","vt":"num"},{"t":"lt","v":"1","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1488,"y":198,"wires":[["eb6f24ce.a87a98"],["effd787.f201788"]]},{"id":"effd787.f201788","type":"function","z":"456886de.887358","name":"set no maps","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'no parsing rule'\nnewPayload['responseCode'] = '404'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":1535,"y":250,"wires":[["a9d299a8.b61218"]]},{"id":"ef1d68b7.8ca1c8","type":"function","z":"456886de.887358","name":"set fport and parsing data","func":"// set msg parameter\nif(msg.payload[0].deviceType !== undefined)\n  msg['fport'] = msg.payload[0].deviceType\nmsg['separateFlg'] = msg.payload[0].separateFlg\nmsg['map'] = msg.payload[0].map\nmsg['pre_transform'] = msg.payload[0].pre_transform\nmsg['validator'] = msg.payload[0].validator\nmsg['transform'] = msg.payload[0].transform\nmsg['trackFlg'] = msg.payload[0].trackFlg\nmsg['empFlg'] = msg.payload[0].empFlg !== undefined ? msg.payload[0].empFlg : 0\n\nlet rawObj = msg['packet']\nlet newPayload = {}\nlet extraInfo = {}\n// set gatewat info \nif(msg.payload[0].deviceType != '162'){\n  if(msg.payload[0].deviceType == '2'){\n    extraInfo['gwip'] = rawObj.extra.gwip\n    extraInfo['gwid'] = rawObj.extra.gwid\n    extraInfo['repeater'] = rawObj.extra.repeater  \n    extraInfo['systype'] = rawObj.extra.systype\n    extraInfo['rssi'] = rawObj.extra.rssi\n    extraInfo['snr'] = rawObj.extra.snr\n    extraInfo['snr_min'] = rawObj.extra.snr_min\n    extraInfo['snr_max'] = rawObj.extra.snr_max\n    extraInfo['sf'] = rawObj.extra.sf\n    extraInfo['channel'] = rawObj.extra.channel\n    extraInfo['frameCnt'] = rawObj.extra.fcnt\n    extraInfo['fport'] = msg['fportFlg'] ? rawObj.extra.fport : msg['fport'] \n    extraInfo['devAddr'] = rawObj.extra.devAddr\n    extraInfo['commsysType'] = rawObj.extra.commsysType\n  }else{\n    extraInfo['gwip'] = rawObj.gwip\n    extraInfo['gwid'] = rawObj.gwid\n    extraInfo['rssi'] = rawObj.rssi\n    extraInfo['snr'] = rawObj.snr\n    extraInfo['snr_max'] = rawObj.snr_max\n    extraInfo['snr_min'] = rawObj.snr_min\n    extraInfo['fport'] = msg['fportFlg'] ? rawObj.fport : msg['fport']\n    extraInfo['frameCnt'] = rawObj.frameCnt\n    extraInfo['channel'] = rawObj.channel\n    extraInfo['systype'] = rawObj.systype\n    extraInfo['sf'] = rawObj.sf\n    extraInfo['repeater'] = rawObj.repeater  \n  }\n}else{\n  extraInfo['fport'] = rawObj.fport  \n}\nnewPayload['macAddr'] = rawObj.macAddr\nnewPayload['data'] = rawObj.data\nnewPayload['recv'] = rawObj.time\nnewPayload['extra'] = extraInfo\nlet mapInfo = {}\nif(msg.payload[0].splitType == 'fix')\n  mapInfo = getMapData(rawObj.data, msg.payload[0].map)\nif(msg.payload[0].splitType == 'tlv')\n  mapInfo = getTlvData(rawObj.data, msg.payload[0].map, false)\nif(msg.payload[0].splitType == 'asciitlv')\n  mapInfo = getTlvData(rawObj.data, msg.payload[0].map, true)\n// flow.set('parseObj', newPayload)\nmsg['parseObj'] = newPayload\nmsg.payload = mapInfo\nreturn msg\nfunction getTlvData(rawObj, mapObj, isAscii){\n  let info = {}\n  let splitPos = 0\n  let endPos = rawObj.length\n  let typeLen = mapObj.typeLen !== undefined ? mapObj.typeLen : 2\n  let lenLen = mapObj.lenLen !== undefined ? mapObj.lenLen : 2\n  let idx = 1\n  let typeName = ''\n  let lenName = ''\n  let start = 0\n  let end = 0\n  let dataType = ''\n  while(splitPos < endPos){\n    typeName = 'type'+idx\n    lenName = 'len'+idx\n    start = Number(splitPos)\n    end = Number(start) + Number(typeLen)\n    //split type\n    let subStr = rawObj.substring(start, end)\n    let data = 1\n    if(isAscii)\n      data = parseInt(transferASCII(subStr), 16)\n    else\n      data = parseInt(subStr, 16)\n    \n    dataType = 'type'+data\n    //check data type\n    let valObj = mapObj[dataType]\n    node.warn('type > st:'+start+' end:'+end+' subStr:'+subStr+' data:'+data)\n    // info[typeName] = data\n    start = end\n    end = start + Number(lenLen)\n    //split len\n    subStr = rawObj.substring(start, end)\n    if(isAscii)\n      data = parseInt(transferASCII(subStr), 16)\n    else\n      data = parseInt(subStr, 16)\n    node.warn('len > st:'+start+' end:'+end+' subStr:'+subStr+' data:'+data)\n    // info[lenName] = data\n    start = end\n    if(valObj.valOffset !== undefined){\n      end = start + data * valObj.valOffset\n    }else{\n      end = start + data\n    }\n    subStr = rawObj.substring(start, end)\n    \n    switch(valObj.valType){\n      case 'ascii':\n        if(subStr.indexOf('00') > -1){\n          subStr = subStr.replace(/00/g, '')\n        }\n        data = transferASCII(subStr)  \n        break\n      case 'dec':\n        data = parseInt(subStr)\n        break\n      case 'str':\n        data = subStr\n        break\n      case 'float':\n        data = parseFloat(subStr)\n        break\n      default:\n        data = parseInt(subStr, 16)\n    }\n    node.warn('val > st:'+start+' end:'+end+' subStr:'+subStr+' data:'+data)\n    if(valObj.split == 1){\n      let splitInfo = {}\n      splitInfo = getMapData(data, valObj.map)\n      for(let key in splitInfo){\n        if(splitInfo.hasOwnProperty(key)){\n          info[key] = splitInfo[key]\n        }\n      }\n    }\n    info[valObj.valName] = data\n    splitPos = end\n    idx++\n  }\n  return info\n}\nfunction getMapData(rawObj, mapObj){\n  let info = {}\n  for(let key in mapObj){\n    if(mapObj.hasOwnProperty(key)){\n      let parseData = getIntData(mapObj[key], rawObj)\n      if(parseData !== null)\n        info[key] = parseData\n    }\n  }\n  return info\n}\nfunction getIntData(arrRange,initData){\n  let ret = {}\n  let start = arrRange[0]\n  let end = arrRange[1]\n  let subStr = initData.substring(start,end)\n  if (subStr === '') {\n    return null;\n  }\n  let diff = arrRange[2]\n  if (diff === 'str') {\n    return subStr\n  } else if (diff==='dec') {\n    return parseInt(subStr)\n  }else if (diff==='ascii') {\n    if(subStr.indexOf('00') > -1){\n     subStr = subStr.replace(/00/g, '')\n    }\n    return transferASCII(subStr)\n  }else if (diff==='signhex') {\n    return parseSignHex(subStr)\n  } else {\n  let data = parseInt(subStr, 16)\n  let result = eval(diff)\n    return Number(result.toFixed(2))\n  }\n}\n\nfunction parseSignHex(hex) {\n  if (hex.length % 2 != 0) {\n    hex = \"0\" + hex\n  }\n  let num = parseInt(hex, 16)\n  let maxVal = Math.pow(2, hex.length / 2 * 8);\n  if (num > maxVal / 2 - 1) {\n    num = num - maxVal\n  }\n  return num\n}\nfunction transferASCII(KeyOri) \n{ \nif (KeyOri.length==0) return; \nvar keylen= KeyOri.length; \nvar Keychar=\"\"; \nvar k=0;\n\nfor (i=0; i<keylen; i++) \n{ \nk=i%2; \nif(k == 0 ) \n{ \nKeychar +=String.fromCharCode(parseInt(KeyOri.substr(i, 2), 16)); \n} \n} \nreturn Keychar; \n} ","outputs":1,"noerr":0,"x":1709,"y":43,"wires":[["479af831.5a3de8","4f7be738.a522d8"]]},{"id":"5f4597f2.577348","type":"switch","z":"456886de.887358","name":"check fport","property":"fport","propertyType":"msg","rules":[{"t":"eq","v":"159","vt":"str"},{"t":"eq","v":"160","vt":"str"},{"t":"eq","v":"161","vt":"str"},{"t":"eq","v":"162","vt":"str"},{"t":"eq","v":"163","vt":"str"},{"t":"eq","v":"164","vt":"str"},{"t":"eq","v":"165","vt":"str"},{"t":"eq","v":"167","vt":"str"},{"t":"eq","v":"168","vt":"str"},{"t":"eq","v":"169","vt":"str"},{"t":"eq","v":"1","vt":"str"},{"t":"eq","v":"2","vt":"str"},{"t":"eq","v":"158","vt":"str"},{"t":"eq","v":"170","vt":"str"},{"t":"eq","v":"18","vt":"str"}],"checkall":"true","repair":false,"outputs":15,"x":1979,"y":221,"wires":[["f84097c0.e4a158"],["6058ae1c.e348f"],["94276f5e.9efdd"],["91324761.7363e8"],["29f25333.1442dc"],["9ed68422.a4e848"],["6058ae1c.e348f"],["ee8c2d88.7d7ca"],["705ae16e.e610b"],["bc253537.e9a458"],["eacd219b.df8b4"],["e615b73a.960b98"],["1f272961.f56fb7"],["6058ae1c.e348f"],["8981ef8b.67df1"]]},{"id":"dcbd0644.8a22a8","type":"function","z":"456886de.887358","name":"set fport 160 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nif(parseObj.header === 170 && parseObj.end === 142){\n  delete parseObj.header\n  delete parseObj.end\n  newPayload = parseObj\n}\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2199.999984741211,"y":67,"wires":[["57d0130f.1e866c"]]},{"id":"eb6f24ce.a87a98","type":"switch","z":"456886de.887358","name":"check mapInfo.map","property":"payload[0].map","propertyType":"msg","rules":[{"t":"nnull"},{"t":"null"}],"checkall":"true","repair":false,"outputs":2,"x":1476,"y":110,"wires":[["ef1d68b7.8ca1c8"],["d9eaeeec.478cc"]]},{"id":"d9eaeeec.478cc","type":"function","z":"456886de.887358","name":"set no maps","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'map object no map info'\nnewPayload['responseCode'] = '404'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":1721,"y":141,"wires":[["a9d299a8.b61218"]]},{"id":"94276f5e.9efdd","type":"function","z":"456886de.887358","name":"set fport 161 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nif(parseObj.head === 43947 && parseObj.end === 3338){\n  delete parseObj.head\n  delete parseObj.end\n  let humVal = parseObj.humidity\n  let tempVal = parseObj.temperature\n  for(let i = 0 ; i < parseObj.humidityPoint ; i++){\n    humVal = eval(humVal / 10)\n  }\n  parseObj.humidity = Number(humVal.toFixed(2))\n  if(parseObj.humiditySign == 1 || parseObj.humiditySign == 3)\n    parseObj.humidity = parseObj.humidity * -1\n  for(let j = 0 ; j < parseObj.temperaturePoint ; j++){\n    tempVal = eval(tempVal / 10)  \n  }\n  parseObj.temperature = Number(tempVal.toFixed(2))\n  if(parseObj.temperatureSign == 1 || parseObj.temperatureSign == 3)\n    parseObj.temperature = parseObj.temperature * -1\n  delete parseObj.humidityPoint\n  delete parseObj.humiditySign\n  delete parseObj.temperaturePoint\n  delete parseObj.temperatureSign\n  delete parseObj.checkSum\n  \n  newPayload = parseObj\n}\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2198.999984741211,"y":107,"wires":[["57d0130f.1e866c"]]},{"id":"91324761.7363e8","type":"function","z":"456886de.887358","name":"set fport 162 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nif(parseObj.header != null && parseObj.switch1 != null && parseObj.switch2 != null && parseObj.switch3 != null && parseObj.switch4 != null && parseObj.checksum != null){\n  let parseSum = parseObj.header+parseObj.switch1+parseObj.switch2+parseObj.switch3+parseObj.switch4\n  if(parseObj.header == 6 && parseObj.checksum == parseSum){\n    delete parseObj.header\n    delete parseObj.checksum\n    newPayload = parseObj\n  }    \n}\n\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2197.999984741211,"y":146,"wires":[["57d0130f.1e866c"]]},{"id":"29f25333.1442dc","type":"function","z":"456886de.887358","name":"set fport 163 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nlet name = ''\nlet checks = [0, 2, 3]\nlet checkFlg = true\nfor(let i = 1 ; i <= 4 ; i++){\n  name = 'switch'+i\n  if(checks.indexOf(parseObj[name]) == -1){\n    checkFlg = false\n  }\n}\nif(checkFlg){\n  newPayload = parseObj\n}\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2198.999984741211,"y":184,"wires":[["57d0130f.1e866c"]]},{"id":"6058ae1c.e348f","type":"function","z":"456886de.887358","name":"set fport 165/170 check rule","func":"let parseObj = msg.payload\nlet mapObj = msg['map']\nlet newPayload = {}\nif( parseObj !== undefined ){\n  let key = ''\n  let typeObj = {}\n  for(let i = 1 ; i <= mapObj.typeSize ; i++){\n    key = 'type'+i\n    typeObj = mapObj[key]\n    if(parseObj[typeObj['valName']] != undefined){\n      newPayload[typeObj['valName']] = parseObj[typeObj['valName']]\n    }\n    switch(i) {\n      case 3:\n        if(checkVal(parseObj['STX'], 2) && checkVal(parseObj['CR'], 13)){\n          //check X and Y\n          let x = checkDecimalPoint(parseObj['X'], parseObj['statusA'])\n          let y = checkDecimalPoint(parseObj['Y'], parseObj['statusA']) * 1\n          let yObj = checkSignTypeTare(y, parseObj['statusB'])\n          for(let key in yObj){\n            if(yObj.hasOwnProperty(key)){\n              newPayload[key] = yObj[key]\n            }\n          }\n          let xObj = checkSignType(x, parseObj['statusB'])\n          for(let key in xObj){\n            if(xObj.hasOwnProperty(key)){\n              newPayload[key] = xObj[key]\n            }\n          }\n        }\n        break\n      default:\n    }\n  }\n}\nmsg.payload = newPayload\nreturn msg\nfunction checkVal(obj, val){\n  return obj !== undefined ? obj == val ? true : false :false\n}\nfunction checkDecimalPoint(src, sa){\n  let bi = parseInt(sa).toString(2)\n  bi = ('0000000'+bi).slice(-7)\n  let p = bi.substring(0,3)\n  let returnStr = ''\n  switch(p){\n    case '000':\n      returnStr = (src+'00').slice(-6)\n      break\n    case '100':\n      returnStr = (src+'0').slice(-6)\n      break\n    case '010':\n      returnStr = src\n      break\n    case '110':\n      returnStr = eval(src / 10)\n      break\n    case '001':\n      returnStr = eval(src / 100)\n      break\n    case '101':\n      returnStr = eval(src / 1000)\n      break\n    case '011':\n      returnStr = eval(src / 10000)\n      break\n    case '111':\n      returnStr = eval(src / 100000)\n      break\n    default:\n  }\n  return returnStr\n}\nfunction checkSignType(src, sb){\n  let bi = parseInt(sb).toString(2)\n  bi = ('0000000'+bi).slice(-7)\n  let p = bi.substring(0,3)\n  let returnObj = {}\n  switch(p){\n    case '000':\n      returnObj['NW'] = src * 1\n      break\n    case '100':\n      returnObj['GW'] = src * 1\n      break\n    case '001':\n      returnObj['NW'] = src * 1\n      break\n    case '101':\n      returnObj['GW'] = src * 1\n      break\n    case '011':\n      returnObj['NW'] = src * -1\n      break\n    case '111':\n      returnObj['GW'] = src * -1\n      break\n    default:\n  }\n  return returnObj\n}\nfunction checkSignTypeTare(src, sb){\n  let bi = parseInt(sb).toString(2)\n  bi = ('0000000'+bi).slice(-7)\n  let p = bi.substring(0,3)\n  let returnObj = {}\n  switch(p){\n    case '000':\n      returnObj['Tare'] = src * 1\n      break\n    case '100':\n      returnObj['Tare'] = src * 1\n      break\n    case '001':\n      returnObj['Tare'] = src * 1\n      break\n    case '101':\n      returnObj['Tare'] = src * 1\n      break\n    case '011':\n      returnObj['Tare'] = src * -1\n      break\n    case '111':\n      returnObj['Tare'] = src * -1\n      break\n    default:\n  }\n  return returnObj\n}","outputs":1,"noerr":0,"x":2208.999984741211,"y":264,"wires":[["57d0130f.1e866c","31a4d2c2.ad98de"]]},{"id":"9ed68422.a4e848","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2147,"y":221,"wires":[]},{"id":"57d0130f.1e866c","type":"function","z":"456886de.887358","name":"check parsing result","func":"msg['emptyFlg'] = isEmptyObject(msg.payload)\nreturn msg\n\nfunction isEmptyObject(obj) { \n  for (var key in obj) { \n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false\n      }\n  }\n  return true \n}\n","outputs":1,"noerr":0,"x":2531,"y":101,"wires":[["ad6c74aa.de2398"]]},{"id":"ad6c74aa.de2398","type":"switch","z":"456886de.887358","name":"check emptyFlg","property":"emptyFlg","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":2738,"y":101,"wires":[["1d4dfd27.5d5d93"],["f1e6f900.b5ae38"]]},{"id":"1d4dfd27.5d5d93","type":"function","z":"456886de.887358","name":"set no rule match","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'data parsing empty'\nnewPayload['responseCode'] = '404'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":3007,"y":33,"wires":[["da0dbc71.dc4c5"]]},{"id":"da0dbc71.dc4c5","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":4945,"y":24,"wires":[]},{"id":"f1e6f900.b5ae38","type":"function","z":"456886de.887358","name":"set information","func":"// let parseObj = flow.get('parseObj')\nlet parseObj = msg['parseObj']\nlet newPayload = {}\nlet objFlg = false\nif(parseObj){\n  parseObj['information'] = msg.payload\n  let ts = Date.now()\n  if(parseObj.recv !== undefined){\n    let dt = new Date(parseObj.recv)\n    ts = dt.getTime()\n  }else{\n    parseObj['recv'] = nowTime.toISOString()\n  }\n  msg['recv'] = parseObj['recv']\n  parseObj['timestamp'] = ts\n  newPayload = parseObj\n//   flow.set('parseObj', parseObj)\n  msg['parseObj'] = parseObj\n  objFlg = true\n}\nmsg['objFlg'] = objFlg\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2918.5,"y":114,"wires":[["e025b25.3353c5"]]},{"id":"e9291b75.334f38","type":"moment","z":"456886de.887358","name":"","topic":"","input":"recv","inputType":"msg","inTz":"ETC/GMT","adjAmount":0,"adjType":"days","adjDir":"add","format":"YYYY-MM-DD HH:mm:ss","locale":"en_US","output":"recv","outputType":"msg","outTz":"Asia/Taipei","x":2808.000244140625,"y":187,"wires":[["4ed9945f.c334bc"]]},{"id":"e025b25.3353c5","type":"switch","z":"456886de.887358","name":"check objFlg","property":"objFlg","propertyType":"msg","rules":[{"t":"false"},{"t":"true"}],"checkall":"true","repair":false,"outputs":2,"x":3115,"y":120,"wires":[["7514c99c.794d18"],["e9291b75.334f38"]]},{"id":"7514c99c.794d18","type":"function","z":"456886de.887358","name":"set no rule match","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'no parsed obj'\nnewPayload['responseCode'] = '403'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":3282,"y":80,"wires":[["da0dbc71.dc4c5"]]},{"id":"39f87d9a.5d11e2","type":"http request","z":"456886de.887358","name":"add event","method":"POST","ret":"obj","url":"http://data-svc:1880/mongo/event","tls":"","x":3766.99995803833,"y":159.00000190734863,"wires":[["dc204c16.d13a4"]]},{"id":"4ed9945f.c334bc","type":"function","z":"456886de.887358","name":"set data to event","func":"let newPayload = {}\nlet datetime = msg.recv;\nlet dateArray = datetime.split(' ');\nlet date = ''\nlet time = ''\nif(dateArray.length >= 2){\n    date = dateArray[0]\n    time = dateArray[1]\n}\nmsg.payload['dateTime'] = msg.recv\nmsg.payload['date'] = date\nmsg.payload['time'] = time\n\nnewPayload['data'] = msg.payload\nmsg['rawData'] = newPayload\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":3044,"y":180,"wires":[["3d44de81.59d092"]]},{"id":"dc204c16.d13a4","type":"switch","z":"456886de.887358","name":"check responseCode","property":"payload.responseCode","propertyType":"msg","rules":[{"t":"neq","v":"000","vt":"str"},{"t":"eq","v":"000","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":3975.9999618530273,"y":157.00000190734863,"wires":[["da0dbc71.dc4c5"],["43e46438.82135c"]]},{"id":"db7a86b0.0ab908","type":"function","z":"456886de.887358","name":"set obj to track","func":"// let parseObj = flow.get('parseObj')\nlet mapObj = msg['map']\nlet parseObj = msg['parseObj']\nlet newPayload = {}\nif(parseObj.information !== undefined && parseObj.information.mac !== undefined){\n  parseObj.information.moduleMac = parseObj.macAddr\n  parseObj.information.macAddr = parseObj.macAddr\n  parseObj.macAddr = parseObj.information.mac\n  delete parseObj.information.mac\n}\nnewPayload['data'] = parseObj\nnewPayload['map']=mapObj\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":4672,"y":251,"wires":[["10ff86ac.7724b9","4ff50f41.46e86"]]},{"id":"10ff86ac.7724b9","type":"http request","z":"456886de.887358","name":"set track","method":"POST","ret":"obj","url":"http://data-svc:1880/track","tls":"","x":4853.9998779296875,"y":240.00000381469727,"wires":[["da0dbc71.dc4c5"]]},{"id":"479af831.5a3de8","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1939.699951171875,"y":49,"wires":[]},{"id":"cdda70b7.e1446","type":"function","z":"456886de.887358","name":"set obj to alert","func":"// let parseObj = flow.get('parseObj')\nlet parseObj = msg['parseObj']\nlet newPayload = {}\nnewPayload['data'] = parseObj\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":4238.80029296875,"y":163,"wires":[["65d58653.575ae8"]]},{"id":"65d58653.575ae8","type":"http request","z":"456886de.887358","name":"check alert","method":"POST","ret":"obj","url":"http://alt-svc:1880/msg","tls":"","x":4436.19970703125,"y":149,"wires":[["15e26f25.beb461"]]},{"id":"3d44de81.59d092","type":"switch","z":"456886de.887358","name":"check separateFlg","property":"separateFlg","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"eq","v":"1","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":3270.099952697754,"y":167.00000286102295,"wires":[["886e7c45.1a514"],["517ac720.87e478"]]},{"id":"517ac720.87e478","type":"function","z":"456886de.887358","name":"set find separate obj","func":"let rawData = msg['rawData']\nlet obj = msg['packet']\nlet newPayload = {}\nnewPayload['fport'] = obj.fport\nnewPayload['macAddr'] = rawData.data.macAddr\nnewPayload['type'] = 'sep'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2927.500099182129,"y":241.00000762939453,"wires":[["ac5480dd.149d6"]]},{"id":"ac5480dd.149d6","type":"mongodb in","z":"456886de.887358","mongodb":"c1a37449.fa5548","name":"get separate rule","collection":"metadata","operation":"find","x":3156.2002868652344,"y":257.0000276565552,"wires":[["2205f442.aea44c"]]},{"id":"2205f442.aea44c","type":"switch","z":"456886de.887358","name":"check metadata","property":"payload.length","propertyType":"msg","rules":[{"t":"lte","v":"0","vt":"num"},{"t":"gt","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":3354.700096130371,"y":253.00000381469727,"wires":[["886e7c45.1a514"],["c987aac5.ddd148"]]},{"id":"576ef30a.13c7ec","type":"function","z":"456886de.887358","name":"set obj to event","func":"let newPayload = {}\nnewPayload = msg['rawData']\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":3555.19970703125,"y":159,"wires":[["39f87d9a.5d11e2","b9160e87.89787"]]},{"id":"c987aac5.ddd148","type":"function","z":"456886de.887358","name":"separate rawData","func":"let rawData = msg['rawData']\nlet pushArray = []\nlet sepObj = msg.payload[0]\nlet sepFlg = 0\nif(sepObj.device !== undefined){\n  for(let i = 0 ; i < sepObj.device.length ; i++){\n    let shadowObj = JSON.parse(JSON.stringify(rawData.data))\n    let d = sepObj.device[i]\n    shadowObj['macAddr'] = d['macAddr']\n    let newField = {}\n    for(let j = 0 ; j < d.replace.length ; j++){\n      let srcVal = ''\n      let r = d.replace[j]\n      let strName = r['src']\n      let fieldName = r['target']\n      let tempObj = rawData.data\n      // get src val\n      if(strName.indexOf('.') != -1){\n        let eventArray = strName.split('.')\n        for(let k = 0 ; k < eventArray.length ; k++){\n          if(k < eventArray.length -1){\n            tempObj = tempObj[eventArray[k]]\n          }else{\n            srcVal = tempObj[eventArray[k]]\n          }\n        }\n      }else{\n        srcVal = tempObj[strName]\n      }\n      node.warn('srcVal > '+srcVal)\n      // get target field\n      \n      if (fieldName.indexOf('.') != -1) {\n        let eventArray = fieldName.split('.')\n        let targetObj = {}\n        for (let k = 0 ; k < eventArray.length - 1 ; k++) {\n          let keyVal = eventArray[k]\n          if (keyVal in newField) {\n            let tempObj = newField[keyVal]\n            tempObj[eventArray[k+1]] = srcVal\n          } else {\n            let childObj = {}\n            childObj[eventArray[k+1]] = srcVal\n            newField[keyVal] = childObj\n          }\n        }\n      }else{\n        newField[fieldName] = srcVal\n      }\n      /*\n      if(fieldName.indexOf('.') != -1){\n        let eventArray = fieldName.split('.')\n        let targetObj = {}\n        for(let k = eventArray.length-1 ; k >= 0  ; k--){\n          if(k == eventArray.length -1){\n            targetObj[eventArray[k]] = srcVal\n          }else{\n            if( k > 0){\n              let temp = {}\n              temp[eventArray[k]] = targetObj\n              targetObj = temp  \n            }else{\n              shadowObj[eventArray[k]] = targetObj\n            }\n          }\n        }\n      }else{\n        shadowObj[fieldName] = srcVal\n      }\n      */\n      node.warn('newField'+ JSON.stringify(newField))\n    }\n    let keys = Object.keys(newField);\n    for (let l = 0; l < keys.length; l++) {\n      shadowObj[keys[l]] = newField[keys[l]]\n    }\n    if(d['keep'] !== undefined){\n      for(let l = 0 ; l < d.keep.length ; l++){\n        let tempObj = rawData.data\n        let srcVal = ''\n        let r = d.keep[l]\n        let strName = r['src']\n        // get src val\n        if(strName.indexOf('.') != -1){\n          let eventArray = strName.split('.')\n          for(let k = 0 ; k < eventArray.length ; k++){\n            if(k < eventArray.length -1){\n              tempObj = tempObj[eventArray[k]]\n            }else{\n              srcVal = tempObj[eventArray[k]]\n            }\n          }\n        }else{\n          srcVal = tempObj[strName]\n        }\n        // get target field\n        if(strName.indexOf('.') != -1){\n          let eventArray = strName.split('.')\n          let targetObj = {}\n          if(shadowObj[eventArray[0]] !== undefined){\n            targetObj = shadowObj[eventArray[0]]\n          }\n          for(let k = eventArray.length-1 ; k >= 0  ; k--){\n            if(k == eventArray.length -1){\n              targetObj[eventArray[k]] = srcVal\n            }else{\n              if( k > 0){\n                let temp = {}\n                temp[eventArray[k]] = targetObj\n                targetObj = temp  \n              }else{\n                shadowObj[eventArray[k]] = targetObj\n              }\n            }\n          }\n        }else{\n          shadowObj[strName] = srcVal\n        }\n      }\n    }\n    let pushObj = {}\n    pushObj['data'] = shadowObj\n    pushArray.push(pushObj)\n  }\n  sepFlg = 1\n  msg.payload = pushArray\n}\nmsg['sepFlg'] = sepFlg\nreturn msg","outputs":1,"noerr":0,"x":3552.5,"y":256.00000381469727,"wires":[["c6dd3a2d.325488"]]},{"id":"c6dd3a2d.325488","type":"switch","z":"456886de.887358","name":"check sepFlg","property":"sepFlg","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"eq","v":"1","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":3749.8999557495117,"y":262.00000381469727,"wires":[["886e7c45.1a514"],["d52dfee.238c3"]]},{"id":"d52dfee.238c3","type":"split","z":"456886de.887358","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":3913.300106048584,"y":280.600004196167,"wires":[["812e3a69.35d128"]]},{"id":"f84097c0.e4a158","type":"function","z":"456886de.887358","name":"set fport 159 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nif(parseObj.header === 170 && parseObj.end === 142){\n  delete parseObj.header\n  delete parseObj.end\n  newPayload = parseObj\n}\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2199.199951171875,"y":29,"wires":[["57d0130f.1e866c"]]},{"id":"12738337.9a956d","type":"catch","z":"456886de.887358","name":"","scope":["ef1d68b7.8ca1c8"],"x":4719,"y":190,"wires":[["14d371b0.18aefe"]]},{"id":"14d371b0.18aefe","type":"function","z":"456886de.887358","name":"set parsing error","func":"let newPayload = {}\nnewPayload['responseCode'] = '500'\nnewPayload['responseMsg'] = 'data parsing error'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":4854,"y":131,"wires":[["da0dbc71.dc4c5"]]},{"id":"26b77284.322dee","type":"function","z":"456886de.887358","name":"set obj to mqtt","func":"let parseObj = msg['parseObj']\nlet sendFlg = false\nif(parseObj.information.eid !== undefined){\n  msg.payload = parseObj\n  sendFlg = true\n}\nmsg['sendFlg'] = sendFlg\nmsg['topic'] = 'GEMTEKS/FACE_RECOGNITION/'+parseObj.macAddr\nreturn msg","outputs":1,"noerr":0,"x":4643,"y":354,"wires":[["86dd99a6.157148","4ff50f41.46e86"]]},{"id":"86dd99a6.157148","type":"switch","z":"456886de.887358","name":"","property":"sendFlg","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":4819,"y":355,"wires":[["d80bb67e.3fd558"]]},{"id":"d80bb67e.3fd558","type":"mqtt out","z":"456886de.887358","name":"","topic":"","qos":"1","retain":"","broker":"c6ab6c63.a37b2","x":4945,"y":351,"wires":[]},{"id":"4ff50f41.46e86","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":4858,"y":432,"wires":[]},{"id":"ee8c2d88.7d7ca","type":"function","z":"456886de.887358","name":"set fport 167 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nlet valvArray = ['value01', 'value14', 'value28']\nlet valaArray = ['value04', 'value18', 'value32']\nlet valpArray = ['value06', 'value20', 'value34', 'value48']\nlet threeWayArray = ['a', 'b', 'c']\nlet powerArray = ['a', 'b', 'c', 't']\nfor(let i = 0 ; i < valvArray.length ; i++){\n  let n = valvArray[i]\n  if(parseObj[n] !== undefined){\n    newPayload[threeWayArray[i]+'v'] = transformDec(parseObj[n], 2)\n  }  \n}\nfor(let j = 0 ; j < valaArray.length ; j++){\n  let n = valaArray[j]\n  if(parseObj[n] !== undefined){\n    newPayload[threeWayArray[j]+'a'] = transformDec(parseObj[n], 4)\n  }  \n}\nfor(let k = 0 ; k < valpArray.length ; k++){\n  let n = valpArray[k]\n  if(parseObj[n] !== undefined){\n    newPayload[powerArray[k]+'p'] = transformDec(parseObj[n], 1)\n  }  \n}\nmsg.payload = newPayload\nreturn msg\nfunction transformDec(val, p){\n  for(let i = 0 ; i < p ; i++){\n    val = eval(val / 10)\n  }\n  val = Number(val.toFixed(p))\n  return val\n}","outputs":1,"noerr":0,"x":2203,"y":309,"wires":[["57d0130f.1e866c"]]},{"id":"4d20ca51.99b664","type":"switch","z":"456886de.887358","name":"check dlFlg","property":"dlFlg","propertyType":"msg","rules":[{"t":"false"},{"t":"true"}],"checkall":"true","repair":false,"outputs":2,"x":96,"y":120,"wires":[["7b8193d2.c9531c"],["79458c6d.683f14"]]},{"id":"79458c6d.683f14","type":"function","z":"456886de.887358","name":"set fport","func":"let packet = msg['packet']\nlet fport = packet.fport\nmsg['fport'] = fport\nreturn msg","outputs":1,"noerr":0,"x":348,"y":151,"wires":[["8357de9a.3e6cc"]]},{"id":"8357de9a.3e6cc","type":"switch","z":"456886de.887358","name":"check fport","property":"fport","propertyType":"msg","rules":[{"t":"eq","v":"161","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":363,"y":193,"wires":[["aae55feb.06ac6"]]},{"id":"aae55feb.06ac6","type":"function","z":"456886de.887358","name":"get meta by fport and mac","func":"let packet = msg['packet']\nlet newPayload = {}\nnewPayload['fport'] = parseInt(packet.fport)\nnewPayload['macAddr'] = packet.macAddr\nnewPayload['type'] = 'meta'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":396,"y":244,"wires":[["6f6e4525.93cf7c"]]},{"id":"6f6e4525.93cf7c","type":"mongodb in","z":"456886de.887358","mongodb":"c1a37449.fa5548","name":"get meta","collection":"metadata","operation":"find","x":410,"y":288,"wires":[["997da9d.d31fb58"]]},{"id":"997da9d.d31fb58","type":"switch","z":"456886de.887358","name":"","property":"payload.length","propertyType":"msg","rules":[{"t":"gt","v":"0","vt":"num"},{"t":"lte","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":405,"y":340,"wires":[["228ca659.3fac0a","f603ca08.f871b8"],["80c79664.a30638"]]},{"id":"80c79664.a30638","type":"function","z":"456886de.887358","name":"set missing info","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'missing metadata'\nnewPayload['responseCode'] = '404'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":681,"y":348,"wires":[["907f2cb8.7e782"]]},{"id":"228ca659.3fac0a","type":"function","z":"456886de.887358","name":"set meta update","func":"let packet = msg['packet']\nlet updateFlg = false\nlet newPayload = msg.payload[0]\nlet d = packet.data\nlet type = d.substring(2,4)\nlet v1 = d.substring(4,6)\nlet v2 = d.substring(6,8)\nlet meta = newPayload['meta']\nlet newObj = {}\nnewObj['val1'] = parseInt(v1)\nnewObj['val2'] = parseInt(v2)\nswitch(type){\n  case '00':\n    meta['type00'] = newObj\n    updateFlg = true\n    break\n  case '01':\n    meta['type01'] = newObj\n    updateFlg = true  \n    break\n  case '02':\n    meta['type02'] = newObj\n    updateFlg = true\n    break\n  default:\n}\nnewPayload['meta'] = meta\nmsg.payload = newPayload\nmsg['updateFlg'] = updateFlg\nreturn msg","outputs":1,"noerr":0,"x":679,"y":302,"wires":[["58c12b5f.90ac74"]]},{"id":"58c12b5f.90ac74","type":"switch","z":"456886de.887358","name":"check updateFlg","property":"updateFlg","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":901,"y":320,"wires":[["d959bcfd.a4646","9d2c90d2.68504"],["638d2512.de738c"]]},{"id":"638d2512.de738c","type":"function","z":"456886de.887358","name":"set missing info","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'update unnecessary'\nnewPayload['responseCode'] = '400'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":938,"y":379,"wires":[["907f2cb8.7e782"]]},{"id":"d959bcfd.a4646","type":"mongodb out","z":"456886de.887358","mongodb":"c1a37449.fa5548","name":"","collection":"metadata","payonly":true,"upsert":false,"multi":false,"operation":"store","x":1183,"y":308,"wires":[]},{"id":"9d2c90d2.68504","type":"function","z":"456886de.887358","name":"set missing info","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'update success'\nnewPayload['responseCode'] = '000'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":1162,"y":361,"wires":[["907f2cb8.7e782"]]},{"id":"f603ca08.f871b8","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":698,"y":248,"wires":[]},{"id":"705ae16e.e610b","type":"function","z":"456886de.887358","name":"set fport 168 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nlet name = ''\nlet checks = ['0', '1']\nlet checkFlg = false\nlet readFlg = false\nif(parseObj['GPI'] !== undefined){\n  let gpi = parseObj['GPI']\n  let pa = parseInt(gpi).toString(2)\n  pa = ('00000000'+pa).slice(-8)\n  for(let i = 1 ; i <= 5 ; i++){\n    name = 'switch'+i\n    parseObj[name] = pa.slice(-1)\n    pa = pa.substring(0,pa.length -1)\n  }\n  parseObj['nodeStatus'] = pa\n  if(pa == '011' || pa == '100'){\n    setSeparate(false)\n    if(pa == '100'){\n      readFlg = true\n    }\n  }\n  checkFlg = true\n}\nfor(let i = 1 ; i <= 5 ; i++){\n  name = 'switch'+i\n  if(checks.indexOf(parseObj[name]) == -1){\n    checkFlg = false\n  }\n}\nif(checkFlg){\n  newPayload = parseObj\n}\nmsg['readFlg'] = readFlg\nmsg.payload = newPayload\nreturn msg\nfunction setSeparate(flg){\n  msg['separateFlg'] = flg    \n}\n","outputs":1,"noerr":0,"x":2201,"y":357,"wires":[["b0d3acad.6d19e"]]},{"id":"31a4d2c2.ad98de","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2825,"y":268,"wires":[]},{"id":"3e00636b.eef91c","type":"debug","z":"456886de.887358","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":391,"y":471,"wires":[]},{"id":"b0d3acad.6d19e","type":"switch","z":"456886de.887358","name":"check readFlg","property":"readFlg","propertyType":"msg","rules":[{"t":"false"},{"t":"true"}],"checkall":"true","repair":false,"outputs":2,"x":2435.5,"y":359,"wires":[["57d0130f.1e866c"],["d89f8650.a06a68"]]},{"id":"fa5c2d40.93952","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2960.5,"y":449,"wires":[]},{"id":"d89f8650.a06a68","type":"function","z":"456886de.887358","name":"get topic","func":"let newPayload = []\nlet packet = msg['packet']\nfor(let i = 1 ; i <= 5 ; i++){\n  let cond = {}\n  let macAddr = eval('/'+packet['macAddr']+'_'+i+'/i')\n  cond['macAddr'] = macAddr\n  cond['extra.fport'] = 169\n  cond['information.confirm'] = 0  \n  newPayload.push(cond)\n}\nlet sort = {}\nsort['recv'] = -1\nmsg['sort'] = sort\nmsg['limit'] = 1\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2468.5,"y":423,"wires":[["c10d443b.5ba0c8"]]},{"id":"a914b43c.822338","type":"mongodb in","z":"456886de.887358","mongodb":"c1a37449.fa5548","name":"get metadata","collection":"devices","operation":"find","x":2637,"y":479,"wires":[["732c78a2.97f518","c5cb00ce.a856a"]]},{"id":"bc253537.e9a458","type":"function","z":"456886de.887358","name":"set fport 169 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nlet name = ''\nlet checks = [0, 1]\nlet checkFlg = false\nlet readFlg = false\nif(parseObj['switch'] !== undefined && parseObj['confirm'] !== undefined){\n    checkFlg = true\n  if(checks.indexOf(parseObj['switch']) == -1){\n    checkFlg = false\n  }\n  if(checks.indexOf(parseObj['confirm']) == -1){\n    checkFlg = false\n  }\n}\nif(checkFlg){\n  newPayload = parseObj\n}\nmsg.payload = newPayload\nreturn msg\n","outputs":1,"noerr":0,"x":2200,"y":412,"wires":[["57d0130f.1e866c"]]},{"id":"732c78a2.97f518","type":"switch","z":"456886de.887358","name":"check obj","property":"payload.length","propertyType":"msg","rules":[{"t":"gt","v":"0","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":2634.5,"y":439,"wires":[["ce364e5.66cbcb"]]},{"id":"ce364e5.66cbcb","type":"split","z":"456886de.887358","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":2630.5,"y":392,"wires":[["c9154cea.2a6bc"]]},{"id":"c9154cea.2a6bc","type":"function","z":"456886de.887358","name":"set confirm = 1","func":"let objInfo = msg.payload.information\nobjInfo['confirm'] = 1\nmsg.payload['information'] = objInfo\nreturn msg","outputs":1,"noerr":0,"x":2796.5,"y":392,"wires":[["deced7a4.51e308","fa5c2d40.93952"]]},{"id":"deced7a4.51e308","type":"mongodb out","z":"456886de.887358","mongodb":"c1a37449.fa5548","name":"set confirm","collection":"devices","payonly":true,"upsert":true,"multi":false,"operation":"store","x":2982.5,"y":389,"wires":[]},{"id":"c5cb00ce.a856a","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2771.5,"y":505,"wires":[]},{"id":"c10d443b.5ba0c8","type":"split","z":"456886de.887358","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":2486.5,"y":481,"wires":[["a914b43c.822338"]]},{"id":"b7876fb7.19522","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":290.5,"y":20,"wires":[]},{"id":"eacd219b.df8b4","type":"function","z":"456886de.887358","name":"set fport 1 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nlet name = ''\nlet checks = [1, 2, 3]\nlet checkFlg = false\nlet readFlg = false\nif(parseObj['type'] !== undefined && parseObj['air'] !== undefined){\n    checkFlg = true\n  if(checks.indexOf(parseObj['type']) == -1){\n    checkFlg = false\n  }\n  \n}\nif(checkFlg){\n  switch(parseObj['type']){\n    case 1:\n      parseObj['co2'] = parseObj['air']\n      break\n    case 2:\n      parseObj['co'] = parseObj['air']\n      break\n    default:\n      parseObj['pm'] = parseObj['air']\n  }\n  parseObj['temp'] = eval(parseObj['temp'] / 100)\n  parseObj['humidity'] = eval(parseObj['humidity'] / 100)\n  delete parseObj.air\n  newPayload = parseObj\n}\nmsg.payload = newPayload\nreturn msg\n","outputs":1,"noerr":0,"x":2186,"y":463,"wires":[["57d0130f.1e866c"]]},{"id":"e615b73a.960b98","type":"function","z":"456886de.887358","name":"set fport 2 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nlet checkFlg = false\nif(parseObj['cmdId'] !== undefined){\n  /*\n  if(parseObj['cmdId'] == 128 && parseObj['status'] !== undefined){\n    let checksum = parseInt(parseObj['cmdId'],10) ^ parseInt(parseObj['b_status'],10)^ parseInt(parseObj['x'],10)^ parseInt(parseObj['y'],10)^ parseInt(parseObj['z'],10)^ parseInt(parseObj['status'],10)\n    if(checksum == parseObj['checksum'])\n      checkFlg = true  \n  }\n  */\n  if(parseObj['cmdId'] == 83){\n    let crcStr = parseObj['y']\n    let checksum = getCRC(crcStr)\n    node.warn('crcStr:'+crcStr)\n    node.warn('checksum:'+checksum)\n    if(checksum == parseObj['z'])\n      checkFlg = true  \n  }\n}\nif(checkFlg){\n  if(parseObj['cmdId'] == 128){\n    let x = parseLoc(parseObj['x'])\n    let y = parseLoc(parseObj['y'])\n    let z = parseLoc(parseObj['z'])\n    //let status = parseLoc(parseObj['status'])\n    parseObj['x'] = x\n    parseObj['y'] = y\n    parseObj['z'] = z  \n    //parseObj['status'] = status  \n  }\n  if(parseObj['cmdId'] == 83){\n    parseObj['cmdId'] = parseInt(parseObj['cmdId'], 16)\n    parseObj['len'] = parseInt(parseObj['x'], 16)\n    parseObj['data'] = parseInt(parseObj['y'], 16)\n    parseObj['checksum'] = parseInt(parseObj['z'], 16)\n    delete parseObj['x']\n    delete parseObj['y']\n    delete parseObj['z']\n  }\n  newPayload = parseObj\n}\nmsg.payload = newPayload\nreturn msg\nfunction parseLoc(tar){\n  let ff = '11111111'\n  let result = ''\n  if(tar !== undefined){\n    let bi = parseInt(tar).toString(2)\n    bi = ('0000000'+bi).slice(-8)\n    let checkBit = bi.substring(0, 1)\n    if(checkBit == '0'){\n      result = parseInt(bi, 2)\n    }else{\n      result = parseInt(bi,2) ^ parseInt(ff,2)\n      result = (result +1)*-1\n    }\n  }\n  return result\n}\nfunction getCRC(str){\n\n  let cnt = str.length / 2\n  let crc\n  for(let i = 0 ; i < cnt ; i++){\n    let st = i*2\n    let pop = str.substr(st, 2)\n    if(pop !== ''){\n      if(i == 0){\n        crc = parseInt(pop, 16)\n      }else{\n        crc ^= parseInt(pop, 16)\n      }\n    }\n  }\n  crc = ('00'+crc.toString(16)).slice(-2)\n  return crc\n}\n","outputs":1,"noerr":0,"x":2188,"y":513,"wires":[["57d0130f.1e866c"]]},{"id":"15e26f25.beb461","type":"switch","z":"456886de.887358","name":"check trackFlg","property":"trackFlg","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":4473.5,"y":207,"wires":[["da0dbc71.dc4c5"],["db7a86b0.0ab908","26b77284.322dee"]]},{"id":"1f272961.f56fb7","type":"function","z":"456886de.887358","name":"set fport 158 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\nif(parseObj.header === 170 && parseObj.end === 142){\n  delete parseObj.header\n  delete parseObj.end\n  newPayload = parseObj\n}\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2201,"y":563,"wires":[["57d0130f.1e866c"]]},{"id":"33b3c4b4.0628ac","type":"function","z":"456886de.887358","name":"find parsing rule by deviceMac","func":"let obj = msg['packet']\nlet newPayload = {}\nnewPayload['deviceMac'] = obj.macAddr+''\nmsg.payload = newPayload\nmsg['fportFlg'] = false\nreturn msg","outputs":1,"noerr":0,"x":887,"y":143,"wires":[["a69eb76a.0fcbd8"]]},{"id":"a69eb76a.0fcbd8","type":"mongodb in","z":"456886de.887358","mongodb":"c1a37449.fa5548","name":"get parsing rule","collection":"maps","operation":"find","x":1019,"y":62,"wires":[["eca52d41.2711f"]]},{"id":"eca52d41.2711f","type":"switch","z":"456886de.887358","name":"check maps","property":"payload.length","propertyType":"msg","rules":[{"t":"gt","v":"0","vt":"num"},{"t":"lte","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1192.5,"y":64,"wires":[["f8b73c75.fc565"],["31dbee26.be9252"]]},{"id":"f8b73c75.fc565","type":"switch","z":"456886de.887358","name":"check mapInfo.map","property":"payload[0].map","propertyType":"msg","rules":[{"t":"nnull"},{"t":"null"}],"checkall":"true","repair":false,"outputs":2,"x":1379,"y":28,"wires":[["ef1d68b7.8ca1c8"],["31dbee26.be9252"]]},{"id":"732c1a6a.054f84","type":"switch","z":"456886de.887358","name":"check fportFlg","property":"fportFlg","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":1779.5,"y":306,"wires":[["5f4597f2.577348"],["ff0a0c35.1ae47"]]},{"id":"ff0a0c35.1ae47","type":"function","z":"456886de.887358","name":"set deviceType check rule","func":"let deviceType = msg['fport']\nlet rawObj = msg['packet']\nlet parseObj = msg.payload\nlet newPayload = {}\nswitch(deviceType) {\n  case 'smoke':\n    node.warn('cks:'+parseObj.cksVal)\n    if(parseObj.cksVal == '00')\n      newPayload = parseObj\n  break\n  case 'door':\n    let tempVal = eval(parseObj['temp'] / 100)  \n    newPayload['temperature'] = Number(tempVal.toFixed(2))\n    let volt = eval(parseObj['battery_volt'] / 1000)  \n    newPayload['volt'] = Number(volt.toFixed(2))\n    newPayload['status'] = parseObj['status']\n  break\n  default:\n}\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":1944,"y":366,"wires":[["57d0130f.1e866c"]]},{"id":"5ffd7e90.fc968","type":"subflow:33922864.659508","z":"456886de.887358","x":1939.5,"y":421,"wires":[["57d0130f.1e866c"]]},{"id":"8981ef8b.67df1","type":"function","z":"456886de.887358","name":"set fport 18 check rule","func":"let parseObj = msg.payload\nlet newPayload = {}\ndelete parseObj.head\ndelete parseObj.end\nif(parseObj.temp1 !== undefined && parseObj.hum1 !== undefined){\n  let humVal = parseObj.hum1\n  let tempVal = parseObj.temp1\n  humVal = eval(humVal / 10)\n  parseObj.hum1 = Number(humVal.toFixed(2))\n  tempVal = eval(tempVal / 10)  \n  parseObj.temp1 = Number(tempVal.toFixed(2))\n}\nif(parseObj.temp2 !== undefined && parseObj.hum2 !== undefined){\n  let humVal = parseObj.hum2\n  let tempVal = parseObj.temp2\n  humVal = eval(humVal / 10)\n  parseObj.hum2 = Number(humVal.toFixed(2))\n  tempVal = eval(tempVal / 10)  \n  parseObj.temp2 = Number(tempVal.toFixed(2))\n}\nif(parseObj.temp3 !== undefined && parseObj.hum3 !== undefined){\n  let humVal = parseObj.hum3\n  let tempVal = parseObj.temp3\n  humVal = eval(humVal / 10)\n  parseObj.hum3 = Number(humVal.toFixed(2))\n  tempVal = eval(tempVal / 10)  \n  parseObj.temp3 = Number(tempVal.toFixed(2))\n}\nnewPayload = parseObj\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":2187,"y":613,"wires":[["57d0130f.1e866c","84433d.815dacc"]]},{"id":"84433d.815dacc","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2381.5,"y":608,"wires":[]},{"id":"43e46438.82135c","type":"function","z":"456886de.887358","name":"set obj to device's state","func":"// let parseObj = flow.get('parseObj')\nlet parseObj = msg['parseObj']\nlet newPayload = {}\nnewPayload['data'] = parseObj\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":4096,"y":354,"wires":[["5e3dff81.462d6"]]},{"id":"5e3dff81.462d6","type":"http request","z":"456886de.887358","name":"update device state","method":"POST","ret":"obj","url":"http://device-svc:1880/state","tls":"","x":4343,"y":352,"wires":[["cdda70b7.e1446"]]},{"id":"812e3a69.35d128","type":"function","z":"456886de.887358","name":"set obj to parseObj","func":"msg['parseObj'] = msg.payload.data\nreturn msg","outputs":1,"noerr":0,"x":3922,"y":210,"wires":[["39f87d9a.5d11e2"]]},{"id":"b9160e87.89787","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":3757.5,"y":108,"wires":[]},{"id":"54c6cac5.cfb2a4","type":"function","z":"456886de.887358","name":"set pre_transform","func":"let pre_transform = msg['pre_transform']\nlet parseObj = msg.payload\nfor (let i = 0 ; i < pre_transform.length ; i ++) {\n  let c = pre_transform[i]\n  node.warn(JSON.stringify(c))\n  if(c['type'] == 'CRC')\n    msg.payload[c['key']] = getCRC(msg.payload[c['val']])\n  if(c['type'] == 'CKS')\n    msg.payload[c['key']] = getCKS(msg.payload[c['val']])\n  if(c['type'] == 'CAL')\n    msg.payload[c['key']] = eval(c['val'])\n}\nreturn msg\nfunction getCKS(str){\n  let cnt = str.length / 2\n  let crc\n  for(let i = 0 ; i < cnt ; i++){\n    let st = i*2\n    let pop = str.substr(st, 2)\n    if(pop !== ''){\n      if(i == 0){\n        crc = parseInt(pop, 16)\n      }else{\n        crc += parseInt(pop, 16)\n      }\n    }\n  }\n  res = ('00'+crc.toString(2)).slice(-2)\n  return res\n}\nfunction getCRC(str){\n  let cnt = str.length / 2\n  let crc\n  for(let i = 0 ; i < cnt ; i++){\n    let st = i*2\n    let pop = str.substr(st, 2)\n    if(pop !== ''){\n      if(i == 0){\n        crc = parseInt(pop, 16)\n      }else{\n        crc ^= parseInt(pop, 16)\n      }\n    }\n  }\n  crc = ('00'+crc.toString(16)).slice(-2)\n  return crc\n}","outputs":1,"noerr":0,"x":1457.5,"y":345,"wires":[["1fd817a9.dc98a8"]]},{"id":"4f7be738.a522d8","type":"switch","z":"456886de.887358","name":"check pre_transform","property":"pre_transform","propertyType":"msg","rules":[{"t":"null"},{"t":"nnull"}],"checkall":"true","repair":false,"outputs":2,"x":1483.5,"y":298,"wires":[["1fd817a9.dc98a8"],["54c6cac5.cfb2a4"]]},{"id":"1fd817a9.dc98a8","type":"function","z":"456886de.887358","name":"set validator","func":"let validator = msg['validator']\nlet parseObj = msg.payload\nlet validArray = []\nlet result = false\nif (validator !== undefined) {\n  for (let i = 0 ; i < validator.length ; i ++) {\n    let v = validator[i]\n    node.warn(JSON.stringify(v))\n    if(v['type'] == 'C')\n      validArray.push(constValidation(parseObj[v['checkField']], v['op'], v['val']))\n    if(v['type'] == 'A')\n      validArray.push(arrayValidation(parseObj[v['checkField']], v['op'], v['val']))\n    if(v['type'] == 'P')\n      validArray.push(constValidation(parseObj[v['checkField']], v['op'], parseObj[v['val']]))\n  }\n  node.warn(JSON.stringify(validArray))\n  result = validArray[0]\n  for (let i = 1 ; i < validator.length; i++) {\n    let combine = validator[i].combine\n    if (combine == 'AND') {\n      if(result && validArray[i-1] && validArray[i]){\n        result = true\n      }\n      else {\n        result = false   \n      }\n    }\n    if (combine == 'OR') {\n      if(result || validArray[i-1] || validArray[i]){\n        result = true\n      }\n      else {\n      result = false \n      }\n    }\n  } \n} else {\n  result = true\n}\nmsg['validFlg'] = result\nreturn msg\nfunction constValidation(val, op, c){\n  node.warn('val:'+val)\n  node.warn('op:'+op)\n  node.warn('c:'+c)\n  let opFlg = false\n  switch (op) {\n    case '>':\n      opFlg = (val > c)\n      break\n    case '>=':\n      opFlg = (val >= c)\n      break\n    case '=':\n      opFlg = (val == c)\n      break\n    case '!=':\n      opFlg = (val != c)\n      break\n    case '<=':\n      opFlg = (val <= c)\n      break\n    case '<':\n      opFlg = (val < c)\n      break\n    default:\n  }\n  return opFlg\n}\nfunction arrayValidation(val, op, c){\n  let opFlg = false\n  switch (op) {\n    case 'in':\n      opFlg = (c.indexOf(val) != -1)\n      break\n    case 'not in':\n      opFlg = (c.indexOf(val) == -1)\n      break\n    default:\n  }\n  return opFlg\n}","outputs":1,"noerr":0,"x":1447.5,"y":414,"wires":[["c849bf45.32a5c"]]},{"id":"c849bf45.32a5c","type":"switch","z":"456886de.887358","name":"check validFlg","property":"validFlg","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":1434.5,"y":488,"wires":[["f217af3e.601c7"],["15dd3b6.154c6c5"]]},{"id":"15dd3b6.154c6c5","type":"function","z":"456886de.887358","name":"set validator fail","func":"let newPayload = {}\nnewPayload['responseMsg'] = 'data validator fail'\nnewPayload['responseCode'] = '500'\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":1638,"y":527,"wires":[["c022f247.ef114"]]},{"id":"c022f247.ef114","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1811.5,"y":531,"wires":[]},{"id":"f217af3e.601c7","type":"function","z":"456886de.887358","name":"set transform","func":"let transform = msg['transform']\nlet parseObj = msg.payload\nparseObj['macAddr'] = msg['parseObj']['macAddr']\nif (transform !== undefined) {\n  for (let i = 0 ; i < transform.length ; i ++) {\n    let c = transform[i]\n    node.warn(JSON.stringify(c))\n    let key = c['key']\n    let transformFlg = true\n    if (c.condition !== undefined) {\n      let conditions = c.condition\n      let validArray = getConditionArray(conditions, parseObj)\n      transformFlg = getConditionFlg(conditions, validArray)\n    }\n    node.warn('transformFlg>>'+transformFlg)\n    if (transformFlg) {\n      if (c['type'] == 'RM')\n        delete msg.payload[c['key']]\n      if (c['type'] == 'CAL') {\n        if (c.for !== undefined){\n          let count = 0\n          // loop calculation\n          if (isNaN(c.for)) {\n            count = parseObj[c.for]\n          } else {\n            count = c.for\n          }\n          if (!isNaN(count)) {\n            let temp = ''\n            for (let j = 0 ; j < count ; j++) {\n              temp = eval(c['val'])\n            }\n            parseObj[key] = temp\n          }\n        } else {\n          parseObj[key] = eval(c['val'])\n        }\n      }\n      if (c['type'] == 'REP') {\n        parseObj[key] = varReplace(c['val'], parseObj)\n      }\n    }\n  }\n  msg.payload = parseObj\n}\nreturn msg\nfunction constValidation(val, op, c){\n  node.warn('val:'+val)\n  node.warn('op:'+op)\n  node.warn('c:'+c)\n  let opFlg = false\n  switch (op) {\n    case '>':\n      opFlg = (val > c)\n      break\n    case '>=':\n      opFlg = (val >= c)\n      break\n    case '=':\n      opFlg = (val == c)\n      break\n    case '!=':\n      opFlg = (val != c)\n      break\n    case '<=':\n      opFlg = (val <= c)\n      break\n    case '<':\n      opFlg = (val < c)\n      break\n    default:\n  }\n  return opFlg\n}\nfunction arrayValidation(val, op, c){\n  let opFlg = false\n  switch (op) {\n    case 'in':\n      opFlg = (c.indexOf(val) != -1)\n      break\n    case 'not in':\n      opFlg = (c.indexOf(val) == -1)\n      break\n    default:\n  }\n  return opFlg\n}\nfunction varReplace(msg, actInfo){\n  let stPos = 0, edPos = 0, subStr = '', replaceWord = ''\n  while(msg.indexOf('{{') > -1 && msg.indexOf('}}') > -1){\n    stPos = msg.indexOf('{{')\n    edPos = msg.indexOf('}}')\n    subStr = msg.substring(stPos+2, edPos)\n    replaceWord = getVal(subStr, actInfo)\n    msg = msg.replace('{{'+subStr+'}}', replaceWord);    \n   }\n  return msg\n}\nfunction getVal(fieldName, actInfo){\n  let reVal = ''\n  if(fieldName.indexOf('.') > -1){\n    let eventArray = fieldName.split('.')\n    let tempObj = actInfo\n    for(let i = 0 ; i < eventArray.length ; i++){\n      if(i < eventArray.length -1){\n        tempObj = tempObj[eventArray[i]]\n      }else{\n        reVal = tempObj[eventArray[i]]\n      }\n    }\n  }else{\n    reVal = actInfo[fieldName]\n  }\n  return reVal\n}\nfunction getConditionArray(conditions, parseObj){\n  let validArray = []\n  for(let j = 0 ; j < conditions.length; j++) {\n    let condObj = conditions[j]\n    if(condObj['type'] == 'C')\n      validArray.push(constValidation(parseObj[condObj['checkField']], condObj['op'], condObj['val']))\n    if(condObj['type'] == 'A')\n      validArray.push(arrayValidation(parseObj[condObj['checkField']], condObj['op'], condObj['val']))\n    if(condObj['type'] == 'P')\n      validArray.push(constValidation(parseObj[condObj['checkField']], condObj['op'], parseObj[condObj['val']]))\n  }\n  return validArray\n}\nfunction getConditionFlg(conditions, validArray){\n  let transformFlg = true\n  transformFlg = validArray[0]\n  for (let j = 1 ; j < conditions.length; j++) {\n    let combine = conditions[j].combine\n    if (combine == 'AND') {\n      if(transformFlg && validArray[j-1] && validArray[j]){\n        transformFlg = true\n      }\n      else {\n        transformFlg = false   \n      }\n    }\n    if (combine == 'OR') {\n      if(transformFlg || validArray[j-1] || validArray[j]){\n        transformFlg = true\n      }\n      else {\n      transformFlg = false \n      }\n    }\n  }\n  return transformFlg\n}","outputs":1,"noerr":0,"x":1638,"y":474,"wires":[["57d0130f.1e866c"]]},{"id":"613c9ff2.2d1b2","type":"function","z":"456886de.887358","name":"set downlink","func":"let mqttFlg = false\nif (msg.payload.data.extra.fport == 170) {\n  mqttFlg = true\n}\nlet newPayload = []\nlet dl = {}\nlet extra = {}\nlet topic = 'GIOT-GW/DL/'\ndl['macAddr'] = msg.payload.data.macAddr\ndl['data'] = '8000AE'+msg.payload.data.extra.frameCnt\ndl['id'] = msg.payload.data.extra.frameCnt\nextra['port'] = 170\nextra['txpara'] = 2\ndl['extra'] = extra\nmsg['topic'] = topic+msg.payload.data.extra.gwid\nnewPayload.push(dl)\nmsg.payload = newPayload\nmsg['mqttFlg'] = mqttFlg\nreturn msg","outputs":1,"noerr":0,"x":3262.5,"y":352,"wires":[["125edcbd.74ba53"]]},{"id":"116911fb.1327ae","type":"mqtt out","z":"456886de.887358","name":"","topic":"","qos":"1","retain":"","broker":"c6ab6c63.a37b2","x":3879.5,"y":350,"wires":[]},{"id":"125edcbd.74ba53","type":"switch","z":"456886de.887358","name":"check mqttFlg","property":"mqttFlg","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":3453.5,"y":352,"wires":[["407c202a.d2c2c"]]},{"id":"407c202a.d2c2c","type":"delay","z":"456886de.887358","name":"","pauseType":"delay","timeout":"1500","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":3682.5,"y":351,"wires":[["116911fb.1327ae"]]},{"id":"c02b6b72.5615f8","type":"inject","z":"456886de.887358","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":119.5,"y":576,"wires":[["8c8f50bb.9cfe8"]]},{"id":"8c8f50bb.9cfe8","type":"mqtt out","z":"456886de.887358","name":"publish report gen cmd","topic":"MERC/REPORT/5e05a00f9b48d8583431ba70","qos":"","retain":"","broker":"c6ab6c63.a37b2","x":424.5,"y":579,"wires":[]},{"id":"5e338cdc.5e88cc","type":"http request","z":"456886de.887358","name":"get emp info","method":"GET","ret":"obj","url":"emp-svc:1880/test","tls":"","x":3397,"y":666,"wires":[["3fb58ef3.e3a4c2"]]},{"id":"3fb58ef3.e3a4c2","type":"function","z":"456886de.887358","name":"set emp info to event","func":"let newPayload = {}\n// newPayload = msg['rawData']\n// newPayload['data']['information']['emp_no'] = msg.payload['emp_no']\n// newPayload['data']['information']['emp_name'] = msg.payload['emp_name']\n// newPayload['data']['information']['dept_no'] = msg.payload['dept_no']\n// newPayload['data']['information']['dept_name'] = msg.payload['dept_name']\nnewPayload['emp_no'] = msg.payload['data']['emp_no']\nnewPayload['emp_name'] = msg.payload['data']['emp_name']\nnewPayload['dept_no'] = msg.payload['data']['dept_no']\nnewPayload['dept_name'] = msg.payload['data']['dept_name']\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":3595,"y":666,"wires":[["dda35c1e.a8d408"]]},{"id":"10dcac06.fc63ec","type":"function","z":"456886de.887358","name":"set emp info to event","func":"let test = {}\nlet newPayload = {}\n\ntest['emp_no'] = \"19012031\"\ntest['emp_name'] = \"Mike\"\ntest['dept_no'] = \"54321\"\ntest['dept_name'] = \"bbb\"\n\nnewPayload['responseCode'] = '000'\nnewPayload['responseMsg'] = 'query success'\nnewPayload['data'] = test\nmsg['payload'] = newPayload\nreturn msg","outputs":1,"noerr":0,"x":3471,"y":729,"wires":[["80529a7b.0731b"]]},{"id":"80529a7b.0731b","type":"http response","z":"456886de.887358","name":"","statusCode":"","headers":{},"x":3661.5,"y":729,"wires":[]},{"id":"78ea0ca0.0a2ddc","type":"http in","z":"456886de.887358","name":"test for emp info","url":"/test","method":"get","upload":false,"swaggerDoc":"","x":3250.5,"y":729,"wires":[["10dcac06.fc63ec","a5dc06d5.07f838"]]},{"id":"b5ed6b00.dcbc68","type":"inject","z":"456886de.887358","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":3237.5,"y":666,"wires":[["5e338cdc.5e88cc"]]},{"id":"dda35c1e.a8d408","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":3795,"y":666,"wires":[]},{"id":"a5dc06d5.07f838","type":"debug","z":"456886de.887358","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":3423.5,"y":780,"wires":[]},{"id":"886e7c45.1a514","type":"switch","z":"456886de.887358","name":"check empFlg","property":"empFlg","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"eq","v":"1","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":3257,"y":445,"wires":[["576ef30a.13c7ec"],["f71788ae.59f818"]]},{"id":"2bc44f7d.7e1bd8","type":"http request","z":"456886de.887358","name":"get emp info","method":"GET","ret":"obj","url":"http://emp-svc:1880/card/getEmpInfo?token={{token}}&cardno={{cardNo}}","tls":"","x":3450,"y":446,"wires":[["e574f18e.117d48"]]},{"id":"3850cf22.5c277","type":"function","z":"456886de.887358","name":"set emp info to event","func":"let newPayload = {}\nnewPayload = msg['rawData']\nnewPayload['data']['information']['emp_no'] = msg.payload['data']['emp_no']\nnewPayload['data']['information']['emp_name'] = msg.payload['data']['emp_name']\nnewPayload['data']['information']['dept_no'] = msg.payload['data']['dept_no']\nnewPayload['data']['information']['dept_name'] = msg.payload['data']['dept_name']\nmsg.payload = newPayload\nreturn msg","outputs":1,"noerr":0,"x":3887,"y":447,"wires":[["576ef30a.13c7ec"]]},{"id":"e574f18e.117d48","type":"switch","z":"456886de.887358","name":"check responseCode","property":"payload.responseCode","propertyType":"msg","rules":[{"t":"neq","v":"000","vt":"str"},{"t":"eq","v":"000","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":3650,"y":446,"wires":[["576ef30a.13c7ec"],["3850cf22.5c277"]]},{"id":"f71788ae.59f818","type":"function","z":"456886de.887358","name":"set emp info to event","func":"msg['token'] = 'system_trigger'\nmsg['cardNo'] = msg.payload['data']['information']['eid']\nreturn msg","outputs":1,"noerr":0,"x":3365,"y":514,"wires":[["2bc44f7d.7e1bd8"]]}]